name: 'Terraform CI/CD Pipeline'

on:
  push:
    branches: [ main ]
    paths:
      - 'infra/**'
      - 'pipelines/terraform.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'infra/**'
      - 'pipelines/terraform.yml'

permissions:
  contents: 'read'
  id-token: 'write'

env:
  GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
  GOOGLE_REGION: ${{ secrets.GOOGLE_REGION }}
  GOOGLE_CLUSTER_NAME: ${{ secrets.GOOGLE_CLUSTER_NAME }}
  GOOGLE_CLUSTER_ZONE: ${{ secrets.GOOGLE_CLUSTER_ZONE }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
        install_components: 'gke-gcloud-auth-plugin'

    - name: Configure kubectl
      run: |
        gcloud container clusters get-credentials ${{ secrets.GOOGLE_CLUSTER_NAME }} \
          --region ${{ secrets.GOOGLE_REGION }} \
          --project ${{ secrets.GOOGLE_PROJECT_ID }}

    - name: Export kubeconfig for Terraform
      run: |
        export KUBECONFIG="$HOME/.kube/config"
        echo "KUBECONFIG=$KUBECONFIG" >> $GITHUB_ENV
        echo "KUBE_CONFIG_PATH=$KUBECONFIG" >> $GITHUB_ENV

    - name: Terraform Init
      working-directory: ./infra
      run: terraform init
      env:
        KUBECONFIG: ${{ env.KUBECONFIG }}

    - name: Terraform Format Check
      working-directory: ./infra
      run: terraform fmt -check
      env:
        KUBECONFIG: ${{ env.KUBECONFIG }}

    - name: Terraform Plan
      working-directory: ./infra
      run: terraform plan -out=tfplan
      env:
        KUBECONFIG: ${{ env.KUBECONFIG }}
        TF_VAR_project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
        TF_VAR_region: ${{ secrets.GOOGLE_REGION }}
        TF_VAR_zone: ${{ secrets.GOOGLE_CLUSTER_ZONE }}
        TF_VAR_grafana_password: ${{ secrets.GRAFANA_PASSWORD }}
        TF_VAR_influxdb_password: ${{ secrets.INFLUXDB_PASSWORD }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      working-directory: ./infra
      run: terraform apply -auto-approve tfplan
      env:
        KUBECONFIG: ${{ env.KUBECONFIG }}
        TF_VAR_project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
        TF_VAR_region: ${{ secrets.GOOGLE_REGION }}
        TF_VAR_zone: ${{ secrets.GOOGLE_CLUSTER_ZONE }}
        TF_VAR_grafana_password: ${{ secrets.GRAFANA_PASSWORD }}
        TF_VAR_influxdb_password: ${{ secrets.INFLUXDB_PASSWORD }}

    - name: Verify Deployments
      if: github.ref == 'refs/heads/main'
      working-directory: ./infra
      run: |
        echo "Verificando deployments..."
        kubectl get deployments --all-namespaces
        kubectl get pods --all-namespaces
      env:
        KUBECONFIG: ${{ env.KUBECONFIG }}

    - name: Health Check
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Verificando saúde das aplicações..."
        kubectl get nodes
        kubectl get pods -A
