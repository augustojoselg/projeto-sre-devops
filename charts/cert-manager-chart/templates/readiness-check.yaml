# Job para verificar se o cert-manager está pronto
# Este job só executa após a instalação completa

apiVersion: batch/v1
kind: Job
metadata:
  name: cert-manager-readiness-check
  namespace: {{ .Values.namespace.name }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "10"
spec:
  template:
    spec:
      serviceAccountName: cert-manager-readiness-check
      containers:
      - name: readiness-check
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          # Aguardar os CRDs estarem disponíveis
          kubectl wait --for=condition=established --timeout=300s crd/certificates.cert-manager.io
          kubectl wait --for=condition=established --timeout=300s crd/clusterissuers.cert-manager.io
          
          # Aguardar os pods estarem prontos
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=cert-manager -n {{ .Values.namespace.name }} --timeout=300s
          
          echo "Cert-manager está pronto!"
      restartPolicy: Never
      backoffLimit: 3
---
# ServiceAccount para o job de verificação
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager-readiness-check
  namespace: {{ .Values.namespace.name }}
---
# ClusterRole para o job de verificação
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager-readiness-check
rules:
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
---
# ClusterRoleBinding para o job de verificação
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cert-manager-readiness-check
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-readiness-check
subjects:
- kind: ServiceAccount
  name: cert-manager-readiness-check
  namespace: {{ .Values.namespace.name }}
